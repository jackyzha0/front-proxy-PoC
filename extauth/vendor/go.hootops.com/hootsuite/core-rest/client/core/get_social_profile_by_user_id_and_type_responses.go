// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "go.hootops.com/hootsuite/core-rest/models"
)

// GetSocialProfileByUserIDAndTypeReader is a Reader for the GetSocialProfileByUserIDAndType structure.
type GetSocialProfileByUserIDAndTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSocialProfileByUserIDAndTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSocialProfileByUserIDAndTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSocialProfileByUserIDAndTypeOK creates a GetSocialProfileByUserIDAndTypeOK with default headers values
func NewGetSocialProfileByUserIDAndTypeOK() *GetSocialProfileByUserIDAndTypeOK {
	return &GetSocialProfileByUserIDAndTypeOK{}
}

/*GetSocialProfileByUserIDAndTypeOK handles this case with default header values.

GetSocialProfileByUserIDAndTypeOK get social profile by user Id and type o k
*/
type GetSocialProfileByUserIDAndTypeOK struct {
	Payload *models.CoreSocialProfileResponse
}

func (o *GetSocialProfileByUserIDAndTypeOK) Error() string {
	return fmt.Sprintf("[GET /socialProfiles][%d] getSocialProfileByUserIdAndTypeOK  %+v", 200, o.Payload)
}

func (o *GetSocialProfileByUserIDAndTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreSocialProfileResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
