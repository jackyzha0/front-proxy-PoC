// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSocialProfilesByOwnerParams creates a new GetSocialProfilesByOwnerParams object
// with the default values initialized.
func NewGetSocialProfilesByOwnerParams() *GetSocialProfilesByOwnerParams {
	var ()
	return &GetSocialProfilesByOwnerParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSocialProfilesByOwnerParamsWithTimeout creates a new GetSocialProfilesByOwnerParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSocialProfilesByOwnerParamsWithTimeout(timeout time.Duration) *GetSocialProfilesByOwnerParams {
	var ()
	return &GetSocialProfilesByOwnerParams{

		timeout: timeout,
	}
}

// NewGetSocialProfilesByOwnerParamsWithContext creates a new GetSocialProfilesByOwnerParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSocialProfilesByOwnerParamsWithContext(ctx context.Context) *GetSocialProfilesByOwnerParams {
	var ()
	return &GetSocialProfilesByOwnerParams{

		Context: ctx,
	}
}

// NewGetSocialProfilesByOwnerParamsWithHTTPClient creates a new GetSocialProfilesByOwnerParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSocialProfilesByOwnerParamsWithHTTPClient(client *http.Client) *GetSocialProfilesByOwnerParams {
	var ()
	return &GetSocialProfilesByOwnerParams{
		HTTPClient: client,
	}
}

/*GetSocialProfilesByOwnerParams contains all the parameters to send to the API endpoint
for the get social profiles by owner operation typically these are written to a http.Request
*/
type GetSocialProfilesByOwnerParams struct {

	/*OwnerID*/
	OwnerID *string
	/*OwnerType*/
	OwnerType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) WithTimeout(timeout time.Duration) *GetSocialProfilesByOwnerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) WithContext(ctx context.Context) *GetSocialProfilesByOwnerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) WithHTTPClient(client *http.Client) *GetSocialProfilesByOwnerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOwnerID adds the ownerID to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) WithOwnerID(ownerID *string) *GetSocialProfilesByOwnerParams {
	o.SetOwnerID(ownerID)
	return o
}

// SetOwnerID adds the ownerId to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) SetOwnerID(ownerID *string) {
	o.OwnerID = ownerID
}

// WithOwnerType adds the ownerType to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) WithOwnerType(ownerType *string) *GetSocialProfilesByOwnerParams {
	o.SetOwnerType(ownerType)
	return o
}

// SetOwnerType adds the ownerType to the get social profiles by owner params
func (o *GetSocialProfilesByOwnerParams) SetOwnerType(ownerType *string) {
	o.OwnerType = ownerType
}

// WriteToRequest writes these params to a swagger request
func (o *GetSocialProfilesByOwnerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OwnerID != nil {

		// query param ownerId
		var qrOwnerID string
		if o.OwnerID != nil {
			qrOwnerID = *o.OwnerID
		}
		qOwnerID := qrOwnerID
		if qOwnerID != "" {
			if err := r.SetQueryParam("ownerId", qOwnerID); err != nil {
				return err
			}
		}

	}

	if o.OwnerType != nil {

		// query param ownerType
		var qrOwnerType string
		if o.OwnerType != nil {
			qrOwnerType = *o.OwnerType
		}
		qOwnerType := qrOwnerType
		if qOwnerType != "" {
			if err := r.SetQueryParam("ownerType", qOwnerType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
