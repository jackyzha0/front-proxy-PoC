// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSocialProfilesParams creates a new GetSocialProfilesParams object
// with the default values initialized.
func NewGetSocialProfilesParams() *GetSocialProfilesParams {
	var ()
	return &GetSocialProfilesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSocialProfilesParamsWithTimeout creates a new GetSocialProfilesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSocialProfilesParamsWithTimeout(timeout time.Duration) *GetSocialProfilesParams {
	var ()
	return &GetSocialProfilesParams{

		timeout: timeout,
	}
}

// NewGetSocialProfilesParamsWithContext creates a new GetSocialProfilesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSocialProfilesParamsWithContext(ctx context.Context) *GetSocialProfilesParams {
	var ()
	return &GetSocialProfilesParams{

		Context: ctx,
	}
}

// NewGetSocialProfilesParamsWithHTTPClient creates a new GetSocialProfilesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSocialProfilesParamsWithHTTPClient(client *http.Client) *GetSocialProfilesParams {
	var ()
	return &GetSocialProfilesParams{
		HTTPClient: client,
	}
}

/*GetSocialProfilesParams contains all the parameters to send to the API endpoint
for the get social profiles operation typically these are written to a http.Request
*/
type GetSocialProfilesParams struct {

	/*Ids*/
	Ids *string
	/*IncludeSocialNetworkAppAuthData*/
	IncludeSocialNetworkAppAuthData *bool
	/*IncludeSocialNetworkAuthData*/
	IncludeSocialNetworkAuthData *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get social profiles params
func (o *GetSocialProfilesParams) WithTimeout(timeout time.Duration) *GetSocialProfilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get social profiles params
func (o *GetSocialProfilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get social profiles params
func (o *GetSocialProfilesParams) WithContext(ctx context.Context) *GetSocialProfilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get social profiles params
func (o *GetSocialProfilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get social profiles params
func (o *GetSocialProfilesParams) WithHTTPClient(client *http.Client) *GetSocialProfilesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get social profiles params
func (o *GetSocialProfilesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIds adds the ids to the get social profiles params
func (o *GetSocialProfilesParams) WithIds(ids *string) *GetSocialProfilesParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get social profiles params
func (o *GetSocialProfilesParams) SetIds(ids *string) {
	o.Ids = ids
}

// WithIncludeSocialNetworkAppAuthData adds the includeSocialNetworkAppAuthData to the get social profiles params
func (o *GetSocialProfilesParams) WithIncludeSocialNetworkAppAuthData(includeSocialNetworkAppAuthData *bool) *GetSocialProfilesParams {
	o.SetIncludeSocialNetworkAppAuthData(includeSocialNetworkAppAuthData)
	return o
}

// SetIncludeSocialNetworkAppAuthData adds the includeSocialNetworkAppAuthData to the get social profiles params
func (o *GetSocialProfilesParams) SetIncludeSocialNetworkAppAuthData(includeSocialNetworkAppAuthData *bool) {
	o.IncludeSocialNetworkAppAuthData = includeSocialNetworkAppAuthData
}

// WithIncludeSocialNetworkAuthData adds the includeSocialNetworkAuthData to the get social profiles params
func (o *GetSocialProfilesParams) WithIncludeSocialNetworkAuthData(includeSocialNetworkAuthData *bool) *GetSocialProfilesParams {
	o.SetIncludeSocialNetworkAuthData(includeSocialNetworkAuthData)
	return o
}

// SetIncludeSocialNetworkAuthData adds the includeSocialNetworkAuthData to the get social profiles params
func (o *GetSocialProfilesParams) SetIncludeSocialNetworkAuthData(includeSocialNetworkAuthData *bool) {
	o.IncludeSocialNetworkAuthData = includeSocialNetworkAuthData
}

// WriteToRequest writes these params to a swagger request
func (o *GetSocialProfilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Ids != nil {

		// query param ids
		var qrIds string
		if o.Ids != nil {
			qrIds = *o.Ids
		}
		qIds := qrIds
		if qIds != "" {
			if err := r.SetQueryParam("ids", qIds); err != nil {
				return err
			}
		}

	}

	if o.IncludeSocialNetworkAppAuthData != nil {

		// query param includeSocialNetworkAppAuthData
		var qrIncludeSocialNetworkAppAuthData bool
		if o.IncludeSocialNetworkAppAuthData != nil {
			qrIncludeSocialNetworkAppAuthData = *o.IncludeSocialNetworkAppAuthData
		}
		qIncludeSocialNetworkAppAuthData := swag.FormatBool(qrIncludeSocialNetworkAppAuthData)
		if qIncludeSocialNetworkAppAuthData != "" {
			if err := r.SetQueryParam("includeSocialNetworkAppAuthData", qIncludeSocialNetworkAppAuthData); err != nil {
				return err
			}
		}

	}

	if o.IncludeSocialNetworkAuthData != nil {

		// query param includeSocialNetworkAuthData
		var qrIncludeSocialNetworkAuthData bool
		if o.IncludeSocialNetworkAuthData != nil {
			qrIncludeSocialNetworkAuthData = *o.IncludeSocialNetworkAuthData
		}
		qIncludeSocialNetworkAuthData := swag.FormatBool(qrIncludeSocialNetworkAuthData)
		if qIncludeSocialNetworkAuthData != "" {
			if err := r.SetQueryParam("includeSocialNetworkAuthData", qIncludeSocialNetworkAuthData); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
