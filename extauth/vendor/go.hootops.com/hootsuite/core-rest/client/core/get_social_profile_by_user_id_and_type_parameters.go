// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSocialProfileByUserIDAndTypeParams creates a new GetSocialProfileByUserIDAndTypeParams object
// with the default values initialized.
func NewGetSocialProfileByUserIDAndTypeParams() *GetSocialProfileByUserIDAndTypeParams {
	var ()
	return &GetSocialProfileByUserIDAndTypeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSocialProfileByUserIDAndTypeParamsWithTimeout creates a new GetSocialProfileByUserIDAndTypeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSocialProfileByUserIDAndTypeParamsWithTimeout(timeout time.Duration) *GetSocialProfileByUserIDAndTypeParams {
	var ()
	return &GetSocialProfileByUserIDAndTypeParams{

		timeout: timeout,
	}
}

// NewGetSocialProfileByUserIDAndTypeParamsWithContext creates a new GetSocialProfileByUserIDAndTypeParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSocialProfileByUserIDAndTypeParamsWithContext(ctx context.Context) *GetSocialProfileByUserIDAndTypeParams {
	var ()
	return &GetSocialProfileByUserIDAndTypeParams{

		Context: ctx,
	}
}

// NewGetSocialProfileByUserIDAndTypeParamsWithHTTPClient creates a new GetSocialProfileByUserIDAndTypeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSocialProfileByUserIDAndTypeParamsWithHTTPClient(client *http.Client) *GetSocialProfileByUserIDAndTypeParams {
	var ()
	return &GetSocialProfileByUserIDAndTypeParams{
		HTTPClient: client,
	}
}

/*GetSocialProfileByUserIDAndTypeParams contains all the parameters to send to the API endpoint
for the get social profile by user Id and type operation typically these are written to a http.Request
*/
type GetSocialProfileByUserIDAndTypeParams struct {

	/*IncludeSocialNetworkAppAuthData*/
	IncludeSocialNetworkAppAuthData *bool
	/*IncludeSocialNetworkAuthData*/
	IncludeSocialNetworkAuthData *bool
	/*SocialProfileType*/
	SocialProfileType *string
	/*UserID*/
	UserID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithTimeout(timeout time.Duration) *GetSocialProfileByUserIDAndTypeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithContext(ctx context.Context) *GetSocialProfileByUserIDAndTypeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithHTTPClient(client *http.Client) *GetSocialProfileByUserIDAndTypeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIncludeSocialNetworkAppAuthData adds the includeSocialNetworkAppAuthData to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithIncludeSocialNetworkAppAuthData(includeSocialNetworkAppAuthData *bool) *GetSocialProfileByUserIDAndTypeParams {
	o.SetIncludeSocialNetworkAppAuthData(includeSocialNetworkAppAuthData)
	return o
}

// SetIncludeSocialNetworkAppAuthData adds the includeSocialNetworkAppAuthData to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetIncludeSocialNetworkAppAuthData(includeSocialNetworkAppAuthData *bool) {
	o.IncludeSocialNetworkAppAuthData = includeSocialNetworkAppAuthData
}

// WithIncludeSocialNetworkAuthData adds the includeSocialNetworkAuthData to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithIncludeSocialNetworkAuthData(includeSocialNetworkAuthData *bool) *GetSocialProfileByUserIDAndTypeParams {
	o.SetIncludeSocialNetworkAuthData(includeSocialNetworkAuthData)
	return o
}

// SetIncludeSocialNetworkAuthData adds the includeSocialNetworkAuthData to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetIncludeSocialNetworkAuthData(includeSocialNetworkAuthData *bool) {
	o.IncludeSocialNetworkAuthData = includeSocialNetworkAuthData
}

// WithSocialProfileType adds the socialProfileType to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithSocialProfileType(socialProfileType *string) *GetSocialProfileByUserIDAndTypeParams {
	o.SetSocialProfileType(socialProfileType)
	return o
}

// SetSocialProfileType adds the socialProfileType to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetSocialProfileType(socialProfileType *string) {
	o.SocialProfileType = socialProfileType
}

// WithUserID adds the userID to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) WithUserID(userID *string) *GetSocialProfileByUserIDAndTypeParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get social profile by user Id and type params
func (o *GetSocialProfileByUserIDAndTypeParams) SetUserID(userID *string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSocialProfileByUserIDAndTypeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IncludeSocialNetworkAppAuthData != nil {

		// query param includeSocialNetworkAppAuthData
		var qrIncludeSocialNetworkAppAuthData bool
		if o.IncludeSocialNetworkAppAuthData != nil {
			qrIncludeSocialNetworkAppAuthData = *o.IncludeSocialNetworkAppAuthData
		}
		qIncludeSocialNetworkAppAuthData := swag.FormatBool(qrIncludeSocialNetworkAppAuthData)
		if qIncludeSocialNetworkAppAuthData != "" {
			if err := r.SetQueryParam("includeSocialNetworkAppAuthData", qIncludeSocialNetworkAppAuthData); err != nil {
				return err
			}
		}

	}

	if o.IncludeSocialNetworkAuthData != nil {

		// query param includeSocialNetworkAuthData
		var qrIncludeSocialNetworkAuthData bool
		if o.IncludeSocialNetworkAuthData != nil {
			qrIncludeSocialNetworkAuthData = *o.IncludeSocialNetworkAuthData
		}
		qIncludeSocialNetworkAuthData := swag.FormatBool(qrIncludeSocialNetworkAuthData)
		if qIncludeSocialNetworkAuthData != "" {
			if err := r.SetQueryParam("includeSocialNetworkAuthData", qIncludeSocialNetworkAuthData); err != nil {
				return err
			}
		}

	}

	if o.SocialProfileType != nil {

		// query param socialProfileType
		var qrSocialProfileType string
		if o.SocialProfileType != nil {
			qrSocialProfileType = *o.SocialProfileType
		}
		qSocialProfileType := qrSocialProfileType
		if qSocialProfileType != "" {
			if err := r.SetQueryParam("socialProfileType", qSocialProfileType); err != nil {
				return err
			}
		}

	}

	if o.UserID != nil {

		// query param userId
		var qrUserID string
		if o.UserID != nil {
			qrUserID = *o.UserID
		}
		qUserID := qrUserID
		if qUserID != "" {
			if err := r.SetQueryParam("userId", qUserID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
