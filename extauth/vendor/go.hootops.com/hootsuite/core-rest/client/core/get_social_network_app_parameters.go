// Code generated by go-swagger; DO NOT EDIT.

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSocialNetworkAppParams creates a new GetSocialNetworkAppParams object
// with the default values initialized.
func NewGetSocialNetworkAppParams() *GetSocialNetworkAppParams {
	var ()
	return &GetSocialNetworkAppParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSocialNetworkAppParamsWithTimeout creates a new GetSocialNetworkAppParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSocialNetworkAppParamsWithTimeout(timeout time.Duration) *GetSocialNetworkAppParams {
	var ()
	return &GetSocialNetworkAppParams{

		timeout: timeout,
	}
}

// NewGetSocialNetworkAppParamsWithContext creates a new GetSocialNetworkAppParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSocialNetworkAppParamsWithContext(ctx context.Context) *GetSocialNetworkAppParams {
	var ()
	return &GetSocialNetworkAppParams{

		Context: ctx,
	}
}

// NewGetSocialNetworkAppParamsWithHTTPClient creates a new GetSocialNetworkAppParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSocialNetworkAppParamsWithHTTPClient(client *http.Client) *GetSocialNetworkAppParams {
	var ()
	return &GetSocialNetworkAppParams{
		HTTPClient: client,
	}
}

/*GetSocialNetworkAppParams contains all the parameters to send to the API endpoint
for the get social network app operation typically these are written to a http.Request
*/
type GetSocialNetworkAppParams struct {

	/*SocialNetworkAppName*/
	SocialNetworkAppName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get social network app params
func (o *GetSocialNetworkAppParams) WithTimeout(timeout time.Duration) *GetSocialNetworkAppParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get social network app params
func (o *GetSocialNetworkAppParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get social network app params
func (o *GetSocialNetworkAppParams) WithContext(ctx context.Context) *GetSocialNetworkAppParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get social network app params
func (o *GetSocialNetworkAppParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get social network app params
func (o *GetSocialNetworkAppParams) WithHTTPClient(client *http.Client) *GetSocialNetworkAppParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get social network app params
func (o *GetSocialNetworkAppParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSocialNetworkAppName adds the socialNetworkAppName to the get social network app params
func (o *GetSocialNetworkAppParams) WithSocialNetworkAppName(socialNetworkAppName *string) *GetSocialNetworkAppParams {
	o.SetSocialNetworkAppName(socialNetworkAppName)
	return o
}

// SetSocialNetworkAppName adds the socialNetworkAppName to the get social network app params
func (o *GetSocialNetworkAppParams) SetSocialNetworkAppName(socialNetworkAppName *string) {
	o.SocialNetworkAppName = socialNetworkAppName
}

// WriteToRequest writes these params to a swagger request
func (o *GetSocialNetworkAppParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SocialNetworkAppName != nil {

		// query param socialNetworkAppName
		var qrSocialNetworkAppName string
		if o.SocialNetworkAppName != nil {
			qrSocialNetworkAppName = *o.SocialNetworkAppName
		}
		qSocialNetworkAppName := qrSocialNetworkAppName
		if qSocialNetworkAppName != "" {
			if err := r.SetQueryParam("socialNetworkAppName", qSocialNetworkAppName); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
